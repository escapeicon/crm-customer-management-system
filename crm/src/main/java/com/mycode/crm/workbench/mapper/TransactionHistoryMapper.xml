<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycode.crm.workbench.mapper.TransactionHistoryMapper" >
    <resultMap id="BaseResultMap" type="com.mycode.crm.workbench.domain.TransactionHistory" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="expected_date" property="expectedDate" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="transaction_id" property="transactionId" jdbcType="CHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
    id, stage, money, expected_date, create_time, create_by, transaction_id
    </sql>

    <!--添加 交易历史-->
    <insert id="insertTransactionHistory" parameterType="transactionHistory">
    insert into tbl_transaction_history (id, stage, money, expected_date, create_time, create_by, transaction_id)
    value (#{id}, #{stage}, #{money}, #{expectedDate}, #{createTime}, #{createBy}, #{transactionId})
    </insert>

    <!--删除 交易历史 根据交易id-->
    <delete id="deleteByTransactionId" parameterType="string" >
        delete from tbl_transaction_history
        where transaction_id = #{transactionId}
    </delete>
    <!--删除多条交易历史 根据多个交易id-->
    <delete id="deleteByTransactionIds" parameterType="string">
        delete from tbl_transaction_history
        where transaction_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--查询多条交易历史 根据交易id-->
    <select id="selectByTransactionIdForList" parameterType="string" resultMap="BaseResultMap">
    select
        history.id,
        dic.value as stage,
        history.money,
        history.expected_date,
        history.create_time,
        user.name as create_by,
        history.transaction_id
    from tbl_transaction_history as history
    join tbl_dic_value as dic on dic.id = history.stage
    join tbl_user as user on user.id = history.create_by
    where history.transaction_id = #{transactionId}
    order by history.create_time desc
    </select>
    <!--查询一条交易历史 根据id-->
    <select id="selectOneByIdTransactionHistory" parameterType="string" resultMap="BaseResultMap">
        select
            history.id,
            dic.value as stage,
            history.money,
            history.expected_date,
            history.create_time,
            user.name as create_by,
            history.transaction_id
        from tbl_transaction_history as history
        join tbl_dic_value as dic on dic.id = history.stage
        join tbl_user as user on user.id = history.create_by
        where history.id = #{id}
    </select>
</mapper>